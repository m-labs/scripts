diff -Naur binutils-2.21.orig/ld/ChangeLog binutils-2.21/ld/ChangeLog
--- binutils-2.21.orig/ld/ChangeLog	2010-12-01 12:03:47.000000000 +0100
+++ binutils-2.21/ld/ChangeLog	2011-01-07 08:40:32.459885370 +0100
@@ -1,3 +1,8 @@
+2010-12-04  Alan Modra  <amodra@gmail.com>
+
+	* ldlang.c (lang_size_sections_1): Align lma using same alignment
+	as for vma.
+
 2010-11-30  Joel Sherrill  <joel.sherrill@oarcorp.com>
 
 	* configure.tgt: Add sparc64-rtems.
diff -Naur binutils-2.21.orig/ld/ldlang.c binutils-2.21/ld/ldlang.c
--- binutils-2.21.orig/ld/ldlang.c	2010-11-05 06:56:53.000000000 +0100
+++ binutils-2.21/ld/ldlang.c	2011-01-07 08:40:32.461885415 +0100
@@ -4788,6 +4788,7 @@
 	    bfd_vma newdot, after;
 	    lang_output_section_statement_type *os;
 	    lang_memory_region_type *r;
+	    int section_alignment = 0;
 
 	    os = &s->output_section_statement;
 	    if (os->constraint == -1)
@@ -4857,8 +4858,6 @@
 	      }
 	    else
 	      {
-		int align;
-
 		if (os->addr_tree == NULL)
 		  {
 		    /* No address specified for this section, get one
@@ -4909,16 +4908,16 @@
 		      }
 
 		    newdot = os->region->current;
-		    align = os->bfd_section->alignment_power;
+		    section_alignment = os->bfd_section->alignment_power;
 		  }
 		else
-		  align = os->section_alignment;
+		  section_alignment = os->section_alignment;
 
 		/* Align to what the section needs.  */
-		if (align > 0)
+		if (section_alignment > 0)
 		  {
 		    bfd_vma savedot = newdot;
-		    newdot = align_power (newdot, align);
+		    newdot = align_power (newdot, section_alignment);
 
 		    if (newdot != savedot
 			&& (config.warn_section_align
@@ -4974,8 +4973,8 @@
 	      {
 		bfd_vma lma = os->lma_region->current;
 
-		if (os->section_alignment != -1)
-		  lma = align_power (lma, os->section_alignment);
+		if (section_alignment > 0)
+		  lma = align_power (lma, section_alignment);
 		os->bfd_section->lma = lma;
 	      }
 	    else if (r->last_os != NULL
@@ -5016,8 +5015,8 @@
 		    else
 		      lma = dot + last->lma - last->vma;
 
-		    if (os->section_alignment != -1)
-		      lma = align_power (lma, os->section_alignment);
+		    if (section_alignment > 0)
+		      lma = align_power (lma, section_alignment);
 		    os->bfd_section->lma = lma;
 		  }
 	      }
